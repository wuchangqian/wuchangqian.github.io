<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 学会欣赏]]></title>
  <link href="http://me.94313.net/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://me.94313.net/"/>
  <updated>2015-07-06T13:53:57+08:00</updated>
  <id>http://me.94313.net/</id>
  <author>
    <name><![CDATA[wuchangqian]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Htop是个好东西]]></title>
    <link href="http://me.94313.net/blog/2015/07/06/htop/"/>
    <updated>2015-07-06T13:49:16+08:00</updated>
    <id>http://me.94313.net/blog/2015/07/06/htop</id>
    <content type="html"><![CDATA[<pre><code>Htop是一款运行于Linux系统监控与进程管理软件，用于取代Unix下传统的top。与top只提供最消耗资源的进程列表不同，htop提供所有进程的列表，并且使用彩色标识出处理器、swap和内存状态。
</code></pre>

<p>用户一般可以在top无法提供详尽系统信息的情况下选择安装并使用htop。比如，在查找应用程序的内存泄漏问题时。与top相比，htop提供更方便、光标控制的界面来杀死进程。
htop用C语言编写，采用了ncurses库。htop的名称源于其作者的名字。</p>

<h2>2. htop安装</h2>

<pre><code>yum -y install ncurses-devel #htop依赖ncurses
cd /opt
wget -c http://ncu.dl.sourceforge.net/project/htop/htop/1.0.2/htop-1.0.2.tar.gz
tar xzf htop-1.0.2.tar.gz
cd htop-1.0.2
./configure
make &amp;&amp; make install
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sed-man-page]]></title>
    <link href="http://me.94313.net/blog/2014/09/01/sed-man-page/"/>
    <updated>2014-09-01T18:30:03+08:00</updated>
    <id>http://me.94313.net/blog/2014/09/01/sed-man-page</id>
    <content type="html"><![CDATA[<p>NAME</p>

<pre><code>   sed - stream editor for filtering and transforming text
</code></pre>

<p>SYNOPSIS</p>

<pre><code>   sed [OPTION]... {script-only-if-no-other-script} [input-file]...
</code></pre>

<p>DESCRIPTION</p>

<pre><code>   Sed  is  a stream editor.  A stream editor is used to perform basic text transformations on an input stream (a file
   or input from a pipeline).  While in some ways similar to an editor which permits scripted edits (such as ed),  sed
   works  by  making  only one pass over the input(s), and is consequently more efficient.  But it is sed's ability to
   filter text in a pipeline which particularly distinguishes it from other types of editors.

   -n, --quiet, --silent

          suppress automatic printing of pattern space

   -e script, --expression=script

          add the script to the commands to be executed

   -f script-file, --file=script-file

          add the contents of script-file to the commands to be executed

   --follow-symlinks

          follow symlinks when processing in place

   -i[SUFFIX], --in-place[=SUFFIX]

          edit files in place (makes backup if SUFFIX supplied)

   -b, --binary

          open files in binary mode (CR+LFs are not processed specially)

   -l N, --line-length=N

          specify the desired line-wrap length for the `l' command

   --posix

          disable all GNU extensions.

   -r, --regexp-extended

          use extended regular expressions in the script.

   -s, --separate

          consider files as separate rather than as a single continuous long stream.

   -u, --unbuffered

          load minimal amounts of data from the input files and flush the output buffers more often

   -z, --null-data

          separate lines by NUL characters

   --help
          display this help and exit

   --version
          output version information and exit

   If no -e, --expression, -f, or --file option is given, then the first non-option  argument  is  taken  as  the  sed
   script  to  interpret.  All remaining arguments are names of input files; if no input files are specified, then the
   standard input is read.

   GNU sed home page: &lt;http://www.gnu.org/software/sed/&gt;.  General help using GNU software:  &lt;http://www.gnu.org/geth‐
   elp/&gt;.   E-mail  bug  reports  to:  &lt;bug-sed@gnu.org&gt;.  Be sure to include the word ``sed'' somewhere in the ``Sub‐
   ject:'' field.
</code></pre>

<p>COMMAND SYNOPSIS</p>

<pre><code>   This is just a brief synopsis of sed commands to serve as a reminder to those who already know sed; other  documen‐
   tation (such as the texinfo document) must be consulted for fuller descriptions.
</code></pre>

<p>   Zero-address &ldquo;commands&rdquo;</p>

<pre><code>   : label
          Label for b and t commands.

   #comment
          The comment extends until the next newline (or the end of a -e script fragment).

   }      The closing bracket of a { } block.
</code></pre>

<p>   Zero- or One- address commands</p>

<pre><code>   =      Print the current line number.

   a \

   text   Append text, which has each embedded newline preceded by a backslash.

   i \

   text   Insert text, which has each embedded newline preceded by a backslash.

   q [exit-code]
          Immediately quit the sed script without processing any more input, except that if auto-print is not disabled
          the current pattern space will be printed.  The exit code argument is a GNU extension.

   Q [exit-code]
          Immediately quit the sed script without processing any more input.  This is a GNU extension.

   r filename
          Append text read from filename.

   R filename
          Append a line read from filename.  Each invocation of the command reads a line from the file.  This is a GNU
          extension.
</code></pre>

<p>   Commands which accept address ranges</p>

<pre><code>   {      Begin a block of commands (end with a }).

   b label
          Branch to label; if label is omitted, branch to end of script.

   c \

   text   Replace the selected lines with text, which has each embedded newline preceded by a backslash.

   d      Delete pattern space.  Start next cycle.

   D      If  pattern  space contains no newline, start a normal new cycle as if the d command was issued.  Otherwise,
          delete text in the pattern space up to the first newline, and  restart  cycle  with  the  resultant  pattern
          space, without reading a new line of input.

   h H    Copy/append pattern space to hold space.

   g G    Copy/append hold space to pattern space.

   l      List out the current line in a ``visually unambiguous'' form.

   l width
          List  out  the  current line in a ``visually unambiguous'' form, breaking it at width characters.  This is a
          GNU extension.

   n N    Read/append the next line of input into the pattern space.

   p      Print the current pattern space.

   P      Print up to the first embedded newline of the current pattern space.

   s/regexp/replacement/
          Attempt to match regexp against the pattern  space.   If  successful,  replace  that  portion  matched  with
          replacement.   The  replacement  may contain the special character &amp; to refer to that portion of the pattern
          space which matched, and the special escapes \1 through \9 to  refer  to  the  corresponding  matching  sub-
          expressions in the regexp.

   t label
          If  a  s///  has done a successful substitution since the last input line was read and since the last t or T
          command, then branch to label; if label is omitted, branch to end of script.

   T label
          If no s/// has done a successful substitution since the last input line was read and since the last t  or  T
          command, then branch to label; if label is omitted, branch to end of script.  This is a GNU extension.

   w filename
          Write the current pattern space to filename.

   W filename
          Write the first line of the current pattern space to filename.  This is a GNU extension.

   x      Exchange the contents of the hold and pattern spaces.

   y/source/dest/
          Transliterate  the  characters in the pattern space which appear in source to the corresponding character in
          dest.
</code></pre>

<p>Addresses</p>

<pre><code>   Sed commands can be given with no addresses, in which case the command will be executed for all input  lines;  with
   one  address, in which case the command will only be executed for input lines which match that address; or with two
   addresses, in which case the command will be executed for all input lines which match the inclusive range of  lines
   starting  from  the first address and continuing to the second address.  Three things to note about address ranges:
   the syntax is addr1,addr2 (i.e., the addresses are separated by a comma); the line which addr1 matched will  always
   be  accepted,  even  if  addr2 selects an earlier line; and if addr2 is a regexp, it will not be tested against the
   line that addr1 matched.

   After the address (or address-range), and before the command, a !  may be inserted, which specifies that  the  com‐
   mand shall only be executed if the address (or address-range) does not match.

   The following address types are supported:

   number Match  only  the  specified line number (which increments cumulatively across files, unless the -s option is
          specified on the command line).

   first~step
          Match every step'th line starting with line first.  For example, ``sed -n 1~2p'' will print all the odd-num‐
          bered  lines in the input stream, and the address 2~5 will match every fifth line, starting with the second.
          first can be zero; in this case, sed operates as if it were equal to step.  (This is an extension.)

   $      Match the last line.

   /regexp/
          Match lines matching the regular expression regexp.

   \cregexpc
          Match lines matching the regular expression regexp.  The c may be any character.

   GNU sed also supports some special 2-address forms:

   0,addr2
          Start out in "matched first address" state, until addr2 is found.  This is similar to 1,addr2,  except  that
          if  addr2 matches the very first line of input the 0,addr2 form will be at the end of its range, whereas the
          1,addr2 form will still be at the beginning of its range.  This works only when addr2 is a  regular  expres‐
          sion.

   addr1,+N
          Will match addr1 and the N lines following addr1.

   addr1,~N
          Will  match addr1 and the lines following addr1 until the next line whose input line number is a multiple of
          N.
</code></pre>

<p>REGULAR EXPRESSIONS</p>

<pre><code>   POSIX.2 BREs should be supported, but they aren't completely because of performance problems.  The \n sequence in a
   regular expression matches the newline character, and similarly for \a, \t, and other sequences.
</code></pre>

<p>BUGS</p>

<pre><code>   E-mail  bug  reports  to bug-sed@gnu.org.  Also, please include the output of ``sed --version'' in the body of your
   report if at all possible.
</code></pre>

<p>AUTHOR</p>

<pre><code>   Written by Jay Fenlason, Tom Lord, Ken Pizzini, and Paolo Bonzini.  GNU sed  home  page:  &lt;http://www.gnu.org/soft‐
   ware/sed/&gt;.   General  help  using  GNU  software:  &lt;http://www.gnu.org/gethelp/&gt;.   E-mail  bug  reports to: &lt;bug-
   sed@gnu.org&gt;.  Be sure to include the word ``sed'' somewhere in the ``Subject:'' field.
</code></pre>

<p>COPYRIGHT</p>

<pre><code>   Copyright  ©  2012  Free  Software   Foundation,   Inc.    License   GPLv3+:   GNU   GPL   version   3   or   later
   &lt;http://gnu.org/licenses/gpl.html&gt;.
   This  is  free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted
   by law.
</code></pre>

<p>SEE ALSO</p>

<pre><code>   awk(1), ed(1), grep(1), tr(1), perlre(1), sed.info, any of various books on sed, the sed FAQ
   (http://sed.sf.net/grabbag/tutorials/sedfaq.txt), http://sed.sf.net/grabbag/.

   The full documentation for sed is maintained as a Texinfo manual.  If the info and sed programs are properly
   installed at your site, the command

          info sed

   should give you access to the complete manual.
</code></pre>

<p>sed 4.2.2                                                June 2013                                                  SED(1)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux-有用的命令]]></title>
    <link href="http://me.94313.net/blog/2014/08/31/linux-useful-command/"/>
    <updated>2014-08-31T18:57:18+08:00</updated>
    <id>http://me.94313.net/blog/2014/08/31/linux-useful-command</id>
    <content type="html"><![CDATA[<p>下面我将和大家分享一些学习Linux命令行的技巧，希望能对大家有所助益。如果在本文中遇到不太熟悉的命令，可以在终端中键入以下命令寻求帮助。
Man <command>
 Linux入门必备
了解bash：没有必要钻研长篇累牍的bash使用手册，通过man bash学习即可。
了解vi：你在工作中也许会使用Emacs或Eclipse，但vi不可替代。
了解ssh：学习无密码验证的基础知识。
bash作业管理基础知识：如使用&amp;、Ctrl-C、fg、bg、Ctrl-Z、jobs和kill等。
文件管理命令：如硬链接和软链接，权限等。
网络管理命令：如ifconfig等。
如何使用正则表达式，如何使用grep、sed等。
学习使用apt-get和yum管理软件包。
提升日常工作效率</p>

<p>在bash中，可以使用Ctrl+R命令搜索命令行历史记录。
在bash中，可以使用Ctrl+W删除最后一个单词，使用Ctrl+U删除整行。
使用cd -命令返回之前的工作目录，使用cd ..命令返回上层目录。
学习如何使用xargs：
$ find . -name *.py | xargs grep some_function<br/>
$ cat hosts | xargs -I{} ssh root@{} hostnameX
使用pstree -p命令查看进程树。
了解不同的信号。例如，使用kill -STOP [PID]终止进程。详细的信号列表可以在man 7 signal中查看。
如果你想让进程永远在后台运行，可以使用nohup和disown命令。
使用netstat -lntp命令查看侦听进程，并参考lsof命令。
在bash脚本中使用subshells对命令进行分组：</p>

<h1>do something in current dir</h1>

<p>(cd /some/other/dir; other-command)</p>

<h1>continue in original dir</h1>

<p>字符串修剪（Trimming Strings）：${var%suffix}和${var#prefix}。例如if var=foo.pdf then echo ${var%.pdf}.txt prints &ldquo;foo.txt&#8221;。
命令的输出可以当做文件使用。例如，比较本地和远程的/etc/hosts文件：
diff /etc/hosts &lt;(ssh somehost cat /etc/hosts)
了解bash中的“here documents”。
了解标准输出和标准错误重定向。
了解ASCII代码表。可以在终端中运行man ascii命令作为参考。
当通过ssh远程工作时，可以使用screen 或 dtach保存回话。
对Web开发者而言，curl、wget等命令非常实用。
将HTML页面转化文本文件：
lynx -dump -stdin
如果要掌握XML，xmlstarlet命令是非常好的工具。
了解ssh端口映射。
使用Alt+shift+3快捷键可以在行前添加注释“#”。
数据处理</p>

<p>了解sort和uniq命令。
了解cut、paste和join命令。
了解如何对文本文件做交集、并集和差集：
cat a b | sort | uniq > c # c is a union b<br/>
cat a b | sort | uniq -d > c # c is a intersect b<br/>
cat a b b | sort | uniq -u > c # c is set difference a – b
对文本文件的第二列做摘要，下面的代码要比同样的Python代码更精炼、快速（3倍）：
awk &lsquo;{ x += $2 } END { print x }&rsquo;
了解字符串和grep命令。
文件分割：了解split（按大小分割）和csplit（按匹配分割）命令。
系统诊断</p>

<p>使用iostat、netstat、top和dstat命令查看磁盘、处理器和网络的状态。
使用free、vmstat等命令了解系统内存状态。
使用mtr网络诊断工具。
使用iftop、nethogs等工具查看占用带宽的进程和带宽。
使用ab工具快速洞悉Web服务器的性能。
以wireshark和tshark命令应对复杂网络诊断。
学习如何使用strace，并用于诊断运行的进程。这对分析程序运行错误的原因，非常有帮助。
使用ldd命令查看共享库文件。
了解如何使用gdb连接到运行中的进程，并进行堆栈跟踪。
有关/proc的知识非常重要。
如何诊断已发生的错误？Sar命令是一种很好的选择，它可以收集、保存并报告系统信息。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux命令行技巧]]></title>
    <link href="http://me.94313.net/blog/2012/03/23/command-line-skill-of-linux/"/>
    <updated>2012-03-23T13:18:37+08:00</updated>
    <id>http://me.94313.net/blog/2012/03/23/command-line-skill-of-linux</id>
    <content type="html"><![CDATA[<h2>编辑命令</h2>

<pre><code>* Ctrl + a ：移到命令行首
* Ctrl + e ：移到命令行尾
* Ctrl + f ：按字符前移（右向）
* Ctrl + b ：按字符后移（左向）
* Alt + f ：按单词前移（右向）
* Alt + b ：按单词后移（左向）
* Ctrl + xx：在命令行首和光标之间移动
* Ctrl + u ：从光标处删除至命令行首
* Ctrl + k ：从光标处删除至命令行尾
* Ctrl + w ：从光标处删除至字首
* Alt + d ：从光标处删除至字尾
* Ctrl + d ：删除光标处的字符
* Ctrl + h ：删除光标前的字符
* Ctrl + y ：粘贴至光标后
* Alt + c ：从光标处更改为首字母大写的单词
* Alt + u ：从光标处更改为全部大写的单词
* Alt + l ：从光标处更改为全部小写的单词
* Ctrl + t ：交换光标处和之前的字符
* Alt + t ：交换光标处和之前的单词
* Alt + Backspace：与 Ctrl + w 相同类似
</code></pre>

<h2>重新执行命令</h2>

<pre><code>* Ctrl + r：逆向搜索命令历史
* Ctrl + g：从历史搜索模式退出
* Ctrl + p：历史中的上一条命令
* Ctrl + n：历史中的下一条命令
* Alt + .：使用上一条命令的最后一个参数
</code></pre>

<h2>控制命令</h2>

<pre><code>* Ctrl + l：清屏
* Ctrl + o：执行当前命令，并选择上一条命令
* Ctrl + s：阻止屏幕输出
* Ctrl + q：允许屏幕输出
* Ctrl + c：终止命令
* Ctrl + z：挂起命令
</code></pre>

<h2>Bang (!) 命令</h2>

<pre><code>* !!：执行上一条命令
* !blah：执行最近的以 blah 开头的命令，如 !ls
* !blah:p：仅打印输出，而不执行
* !$：上一条命令的最后一个参数，与 Alt + . 相同
* !$:p：打印输出 !$ 的内容
* !*：上一条命令的所有参数
* !*:p：打印输出 !* 的内容
* ^blah：删除上一条命令中的 blah
* ^blah^foo：将上一条命令中的 blah 替换为 foo
* ^blah^foo^：将上一条命令中所有的 blah 都替换为 foo
</code></pre>

<h2>注意：</h2>

<pre><code>1. 以上介绍的大多数 Bash 快捷键仅当在 emacs 编辑模式时有效，若你将 Bash 配置为 vi 编辑模式，那将遵循 vi 的按键绑定。Bash 默认为 emacs 编辑模式。如果你的 Bash 不在 emacs 编辑模式，可通过 set -o emacs 设置。
2. ^S、^Q、^C、^Z 是由终端设备处理的，可用 stty 命令设置。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yum配置笔记]]></title>
    <link href="http://me.94313.net/blog/2012/03/02/note-of-yum/"/>
    <updated>2012-03-02T10:11:18+08:00</updated>
    <id>http://me.94313.net/blog/2012/03/02/note-of-yum</id>
    <content type="html"><![CDATA[<h3>YUM 优点</h3>

<p>自动解决包的依赖性的问题能更新的添加/删除/更新/RPM包
便于管理大量系统的更新问题
可以同时配置多个资源库（Repository）
简洁的配置文件(/etc/yum.conf)
保持与RPM数据库的一致性
有一个比较详细的log.可以查看何时升级了什么软件包</p>

<h3>CentOS的镜像站点</h3>

<p>了解 镜像站点的文件结构 对理解 yum 配置文件 .repo 文件有帮助</p>

<pre><code>http://mirror-status.centos.org
http://isoredirect.centos.org/centos/5/isos/i386/
addons/      本目录包含Centos的addons 仓库
centosplus/  本目录包含Centos的centosplus 仓库
extras/      本目录包含Centos的extras 仓库
fasttrack/   本目录包含Centos的extras 仓库
isos-dvd/    本目录包含发行版的DVD iso 下载
isos/        本目录包含发行版 CD iso 下载
os/          本目录包含发行版(distributions)的仓库
updates/     本目录包含Centos的updates仓库
</code></pre>

<h3>CentOS 的仓库</h3>

<p>仓库(repository) 是一个预备好的目录or 网站，包含了软件包和索引。
yum 可以在仓库中自动定位并获取正确的RPM软件。
镜像服务器为每个版本的Centos分别提供了一些仓库。
Centos中的软件管理工具 yum已经预先配置为使用下列四个仓库：
base: 构成Centos发行版(distributions)的软件包，和光盘上的内容相同
updates: base 仓库中软件包的更新版本
addons: 已编译的但不在发行版(distributions)中的软件包
extras: 一大批附加的软件包
centospuls:　用于增强一些现有软件包的功能(默认未启用)</p>

<h3>CentOS 仓库的目录结构</h3>

<pre><code>updates/
 |--SRPMS                        #源代码目录
 |  |--*.src.rpm                #源代码包目录    
 |    |--repodata/                #源代码的索引文件
 |--i386                        #Intel 32位平台的目录
 |    |--RPMS                        #Intel 32位平台的RPMS目录
 |    |    |--*.i386.rpm            #在intel 32位平台上编译的包文件
 |    |    |--*.centos.noarch.rpm    #与平台无关的已编译的包文件
 |    |--repodata/                #intel 32位平台的索引文件
 |--x68_64                        #64位平台的目录
    |--RPMS                        #64位平台的RPMS目录
    |    |--x68_64.rpm            #在64位平台上编译的包文件
    |    |--*.centos.noarch.rpm    #与平台无关的已编译的包文件
    |--repodata/                #64位平台的索引文件
</code></pre>

<h3>配置YUM客户的更新源</h3>

<p>yum使用reposdir /etc/yum.repos.d 目录下的一系列.repo 文件列出可获取软件包仓库的镜像站点地址.
默认情况下有两个：
Centos-Base.repo: 用于设置远程仓库
Centos-Media.repo: 用于设置本地仓库</p>

<p>yum 目录结构</p>

<pre><code>/etc
  |--yum/
  |   |--/pluginconf.d    
  |   |--/yum-updatesd.conf/
  |            |--downloadonly.conf
  |            |--fastestmirror.conf
  |            |--priorities.conf
  |--yum.conf
  |--yum.repos.d/
        |--CentOS-Base.repo
        |--CentOS-Media.repo
</code></pre>

<p>在.repo 文件中，配置语法是分段的，每一段配置一个软件仓库，语法如下：
设置网络更新源
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</p>

<pre><code>[base]  \\用于指定仓库
name=CentOS-$releasever - Base \\用于指定易读的仓库名称
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os \\用于指定本仓库的URL
#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/
#        =ftp://  \\用于指定远程ftp协议的愿
#        =file://  \\ 用于本地镜像或NFS挂载文件系统
#nabled=0/1  \\用于指定是否使用本地仓库，默认为1，即可用。
gpgcheck=1  \\用于指定是否检查软件包的GPG签名
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5  \\用于指定GPG签名文件的URL
</code></pre>

<p>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
注：若指定mirrorlist,系统将从Centos 的镜像站点中选择离你最近的仓库。
[$releasever]当前系统的版本号
[$basearch] 当前系统的构架
baseurl 可以指定多个URL ,系统会依次检查你列出的仓库。以便某个服务器宕机时使用另一台服务器</p>

<h3>设置本地更新源</h3>

<p>为了使用 [c5-media]仓库，需将Centos-Base</p>

<pre><code>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[c5-media]
name=CentOS-$releasever - Media
baseurl=file:///media/CentOS/
        file:///media/cdrom/
        file:///media/cdrecorder/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
</code></pre>

<p>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</p>

<h3>设置非官方更新源</h3>

<pre><code>以安置rpmforge 软件包为例在
http://rpm.pbone.net/
http://dag.wieers.com/rpm/
http://rpmforge.net
http://rpm.livna.org
http://freshrpms.net
http://atrpms.net
中找到适用于 Centos 5 的软件包
wget http://................rpmforge-release..... .rpm
rpm -ivh rpmforge-release........... .rpm
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmforge-*
</code></pre>

<p>安装 rpmforge-release 软件包之后可以看到/etc/yum.repos.d/rpmfoge.repo文件</p>

<p>or建立一个DAG 的仓库
vi /etc/yum.repos.d/dag.repo</p>

<pre><code>[dag]
name=Dag RPM Repository for Red Hat Enterprise Linux
baseurl=http://apt.sw.be/redhat/el$releasever/en/$basearch/dag
gpgcheck=1
enabled=1
gpgkey=http://dag.wieers.com/packages/RPM-GPG-KYE.dag.txt
</code></pre>

<h3>yum 命令工具</h3>

<pre><code>yum check-update            检查可更新的软件包
yum update                    下载更新系统已安装的所有软件把
yum upgrade                    大规模的升级，不同于上面的是,连旧的淘汰的包也升级
yum install &lt;packages&gt;        安装指定的软件包
yum update &lt;packages&gt;        更新指定的软件包
yum remove &lt;packages&gt;        卸载指定的软件包
yum groupinstall &lt;packages&gt;    安装指定的软件组中的软件包
yum groupupdate &lt;packages&gt;    更新 ... ...
yum groupremove &lt;packages&gt;    卸载 ... ...
yum grouplist                查看系统中已经安装的和可以用的软件组
yum list                    列出资源库中所有可以安装or 更新以及已经安装的的rpm包
yum list &lt;regex&gt;             列出资源库中与正则表达式匹配的可以安装或更新以及已经安装的rpm包
yum list available             列出资源库中所有可以安装的rpm包
yum list available &lt;regex&gt;     列出资源库中与正则表达式匹配的所有可以安装的rpm包
yum list updates             列出资源库中所有可以更新的rpm包
yum list updates &lt;regex&gt;     列出资源库中与正则表达式匹配的所有可以更新的rpm包
yum list installed             列出资源库中所有已经安装的rpm包
yum list installed &lt;regex&gt;     列出资源库中与正则表达式匹配的所有已经安装的rpm包
yum list extras             列出已经安装的但是不包含在资源库中的rpm包
yum list extras &lt;regex&gt;     列出与正则表达式匹配的已经安装的但是不包含在资源库中的rpm包
yum list recent             列出最近被添加到资源库中的软件包
yum search &lt;regex&gt;             检测所有可用的软件的名称、描述、概述和已列出的维护者，查找与正则表达式匹配的值
yum provides &lt;regex&gt;         检测软件包中包含的文件以及软件提供的功能，查找与正则表达式匹配的值
yum clean headers             清除缓存中的rpm头文件
yum clean packages             清除缓存中rpm包文件
yum clean all                 清除缓存中的rpm头文件和包文件
yum deplist &lt;packages&gt;         显示软件包的依赖信息
</code></pre>

<p>第一次使用yum或者yum资源库有更新是.yum会自动下载所有需要的headers 放置于/var/cache/yum
还可以用yum info 命令列出包信息,yum info 可用的参数与 yum list的相同
yum 命令还可以使用 -y 参数 回答命令运行时所提出的问题。</p>

<p>yum update 升级时 排除升级内核
yum update 排除升级内核，方法有两个:
1.修改yum的配置文件 vi /etc/yum.conf，在[main]的最后添加exclude=kernel<em>
2.直接在yum的命令行执行如下的命令：
yum –exclude=kernel</em> update</p>

<h3>附：</h3>

<p>当仓库配置文件 *.repo 使用了多个URL yum-fastestmirror  可以自动选择最快的镜像站点</p>

<pre><code>yum -y install yum-fastestmirror
yum-fastestmirror 的配置文件在 /etc/yum/pluginconf.d/fastestmirror.conf 默认不需要修改。

yum -updatesd
rpm -ql yum-updatesd
yum -cron
yum -y install yum-cron
rpm -ql yum-cron
/etc
    |--/cron.daily/yum.cron        每日更新脚本
    |--/cron.weekly/yum.cron    每周更新脚本
    |--/rc.d/int.d/yum            启动脚本
    |--/yum/yum-daily.yum
/usr/share/doc/yum-cron-0.1
                        |--/COPYING
                        |--/README
</code></pre>

<p>使用yum下载而不安装rpm包
先安装yum-downloadonly</p>

<pre><code># yum install yum-downloadonly
</code></pre>

<p>安装后使用方法如下:</p>

<pre><code># yum update httpd -y --downloadonly   ###下载到默认目录  /var/cache/yum
OR
# yum update httpd -y --downloadonly --downloaddir=/opt     ##下载到指定目录
# yum install perl-MailTools --downloadonly --downloaddir=/opt -y     ##如果软件已经下载过了，必须使用这个来下载
</code></pre>
]]></content>
  </entry>
  
</feed>
